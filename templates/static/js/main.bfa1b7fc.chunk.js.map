{"version":3,"sources":["logo.svg","components/PopupChoose/PopupChoose.js","components/AuthForm/AuthForm.js","App.js","reportWebVitals.js","index.js"],"names":["PopupChoose","arr","click","isOpen","className","clsx","map","i","onClick","AuthForm","useState","proj_type","setproj_type","sw_liter","setsw_liter","from_date","setfrom_date","from_time","setfrom_time","to_date","setto_date","to_time","setto_time","ionoDate","setIonoDate","ionoTime","setIonoTime","auroral_date","setauroral_date","auroral_time","setauroral_time","sw_delta","setsw_delta","sw_channel","setsw_channel","obs_code","setobs_code","deg_radius","setdeg_radius","isProjOpen","setIsProjOpen","isSw_Litter","setIsSw_Litter","issw_channel","setIssw_channel","isObs_code","setIsObs_code","literA","setLitterA","literB","setLitterB","literC","setLitterC","literAC","setLitterAC","projCorMinD","setprojCorMinD","projCorMinS","setprojCorMinS","projCorMaxD","setprojCorMaxD","projCorMaxS","setprojCorMaxS","swCorMinD","setswCorMinD","swCorMinS","setswCorMinS","swCorMaxD","setswCorMaxD","swCorMaxS","setswCorMaxS","annotate_sw_value","setannotate_sw_value","ionomodel_n","setionomodel_n","ionomodel_s","setionomodel_s","auroral_n","setauroral_n","auroral_s","setauroral_s","cut_obs_swarm_value","igrf_vector_diff","setigrf_vector_diff","measure_mu","setmeasure_mu","near_auroral_points","setnear_auroral_points","onSubmit","e","preventDefault","document","location","href","isPlot","style","display","width","onChange","type","id","target","value","defaultValue","required","color","margin","flexDirection","alignItems","autoComplete","name","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfa1b7fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './PopupChoose.css';\r\nimport clsx from 'clsx';\r\n\r\n\r\nfunction PopupChoose({arr, click, isOpen}) {\r\n  return(\r\n  <ul className={clsx(\"choose\", isOpen && \"choose_active\")}>\r\n    {arr.map((i) => {\r\n      return <li onClick={() => click(i)} key={i} className=\"chooseField\">{i}</li>\r\n    })}\r\n  </ul>\r\n  );\r\n}\r\n\r\nexport default PopupChoose;","import React, { useState } from \"react\";\r\nimport './AuthForm.css';\r\n/* import {useLocation} from \"react-router-dom\";\r\n */\r\nimport PopupChoose from \"../PopupChoose/PopupChoose\";\r\nimport { IconChevronDown, IconChevronUp } from '@tabler/icons';\r\nimport clsx from 'clsx';\r\n\r\n\r\nfunction AuthForm() {\r\n  const [proj_type, setproj_type] = useState(\"plot\");\r\n  const [sw_liter, setsw_liter] = useState(\"A\");\r\n\r\n  const [from_date, setfrom_date] = useState(\"2017-09-07\");\r\n  const [from_time, setfrom_time] = useState(\"00:00\");\r\n  const [to_date, setto_date] = useState(\"2017-09-09\");\r\n  const [to_time, setto_time] = useState(\"00:00\");\r\n  const [ionoDate, setIonoDate] = useState();\r\n  const [ionoTime, setIonoTime] = useState();\r\n  const [auroral_date, setauroral_date] = useState();\r\n  const [auroral_time, setauroral_time] = useState();\r\n  const [sw_delta, setsw_delta] = useState(300);\r\n\r\n  const [sw_channel, setsw_channel] = useState(\"n\");\r\n  const [obs_code, setobs_code] = useState();\r\n  const [deg_radius, setdeg_radius] = useState(5);\r\n\r\n  const [isProjOpen, setIsProjOpen] = useState(false);\r\n  const [isSw_Litter, setIsSw_Litter] = useState(false);\r\n  const [issw_channel, setIssw_channel] = useState(false);\r\n  const [isObs_code, setIsObs_code] = useState(false);\r\n\r\n  const [literA, setLitterA] = useState(false);\r\n  const [literB, setLitterB] = useState(false);\r\n  const [literC, setLitterC] = useState(false);\r\n  const [literAC, setLitterAC] = useState(false);\r\n\r\n\r\n  const [projCorMinD, setprojCorMinD] = useState();\r\n  const [projCorMinS, setprojCorMinS] = useState();\r\n  const [projCorMaxD, setprojCorMaxD] = useState();\r\n  const [projCorMaxS, setprojCorMaxS] = useState();\r\n\r\n\r\n  const [swCorMinD, setswCorMinD] = useState();\r\n  const [swCorMinS, setswCorMinS] = useState();\r\n  const [swCorMaxD, setswCorMaxD] = useState();\r\n  const [swCorMaxS, setswCorMaxS] = useState();\r\n\r\n\r\n  const [annotate_sw_value, setannotate_sw_value] =useState(false);\r\n  const [ionomodel_n, setionomodel_n] = useState(false);\r\n  const [ionomodel_s, setionomodel_s] = useState(false);\r\n  const [auroral_n, setauroral_n] = useState(false);\r\n  const [auroral_s, setauroral_s] = useState(false);\r\n  const [cut_obs_swarm_value, setcut_obs_swarm_value] = useState(false);\r\n  const [igrf_vector_diff, setigrf_vector_diff] = useState(false);\r\n  const [measure_mu, setmeasure_mu] = useState(false);\r\n  const [near_auroral_points, setnear_auroral_points] = useState(false);\r\n\r\n  const proj_typeArr = [\"miller\", \"ortho_n\", \"ortho_s\", \"plot\"]\r\n  const sw_literArr = [\"A\", \"B\", \"C\", \"AC\"]\r\n  const swChannelArr = [\"n\", \"e\", \"c\", \"fac2\"]\r\n  const obs = ['AAA', 'ABG', 'ABK', 'AIA', 'API', 'ARS', 'ASC', 'ASP', 'BDV', 'BEL', 'BFO', 'BLC', 'BMT', 'BOU', 'BOX', 'BRD', 'BRW', 'BSL', 'CBB', 'CKI', 'CLF', 'CMO', 'CNB', 'CNH', 'CPL', 'CSY', 'CTA', 'CYG', 'CZT', 'DED', 'DLT', 'DMC', 'DOU', 'DRV', 'DUR', 'EBR', 'ESK', 'EYR', 'FCC', 'FRD', 'FRN', 'FUR', 'GAN', 'GCK', 'GDH', 'GNG', 'GUA', 'GUI', 'GZH', 'HAD', 'HBK', 'HER', 'HLP', 'HON', 'HRB', 'HRN', 'HUA', 'HYB', 'IQA', 'IRT', 'IZN', 'JAI', 'JCO', 'KAK', 'KDU', 'KEP', 'KHB', 'KIV', 'KMH', 'KNY', 'KOU', 'LER', 'LON', 'LRM', 'LVV', 'LYC', 'LZH', 'MAB', 'MAW', 'MBO', 'MCQ', 'MEA', 'MGD', 'MMB', 'NAQ', 'NCK', 'NEW', 'NGK', 'NUR', 'NVS', 'ORC', 'OTT', 'PAF', 'PAG', 'PEG', 'PET', 'PHU', 'PIL', 'PPT', 'PST', 'RES', 'SBA', 'SBL', 'SFS', 'SHE', 'SHU', 'SIT', 'SJG', 'SOD', 'SON', 'SPG', 'SPT', 'STJ', 'SUA', 'TAM', 'TDC', 'THL', 'THY', 'TRW', 'TSU', 'TTB', 'TUC', 'UPS', 'VAL', 'VIC', 'VNA', 'VOS', 'VSS', 'WIC', 'WMQ', 'WNG', 'YAK', 'YKC'];\r\n\r\n\r\n  function onSubmit(e) {\r\n   e.preventDefault();\r\n\r\n    document.location.href = `http://aleph.gcras.ru/request/?proj_type=${proj_type}&plot_liter=${literA}:${literB}:${literC}:${literAC}&sw_liter=${sw_liter}&from_date=${from_date}T${from_time}:00&to_date=${to_date}T${to_time}:00&sw_channel=${sw_channel}&annotate_sw_value=${annotate_sw_value}&ionomodel_date=${ionoDate}T${ionoTime}:00&ionomodel_n=${ionomodel_n}&ionomodel_s=${ionomodel_s}&auroral_date=${auroral_date}T${auroral_time}:00&auroral_n=${auroral_n}&auroral_s=${auroral_s}&proj_extend_loc=${projCorMinD}:${projCorMaxD}:${projCorMinS}:${projCorMaxS}&swarm_poly_loc=${swCorMinD}:${swCorMaxD}:${swCorMinS}:${swCorMaxS}&cut_obs_swarm_value=${cut_obs_swarm_value}&obs_code=${obs_code}&deg_radius=${deg_radius}&igrf_vector_diff=${igrf_vector_diff}&measure_mu=${measure_mu}&near_auroral_points=${near_auroral_points}&sw_delta=${sw_delta}`\r\n  }\r\n\r\n\r\n  function onProjTypeClick(i) {\r\n    setproj_type(i);\r\n  }\r\n\r\n  function onSwLitter(i) {\r\n    setsw_liter(i)\r\n  }\r\n\r\n  function onSwChannel(i) {\r\n    setsw_channel(i);\r\n  }\r\n\r\n  function onObs(i) {\r\n    setobs_code(i)\r\n  }\r\n\r\n\r\n  function openProjType() {\r\n    setIsProjOpen(!isProjOpen)\r\n  }\r\n\r\n  function openSW_Litter() {\r\n    setIsSw_Litter(!isSw_Litter)\r\n  }\r\n\r\n  function openSw_Channel() {\r\n    setIssw_channel(!issw_channel)\r\n  }\r\n\r\n function openObs() {\r\n   setIsObs_code(!isObs_code)\r\n }\r\n\r\n\r\n  function isPlot() {\r\n    return proj_type === \"plot\"\r\n  }\r\n\r\n  function handleDateFrom(e) {\r\n    setfrom_date(e.target.value)\r\n  }\r\n\r\n  function handleTimeFrom(e) {\r\n    setfrom_time(e.target.value)\r\n  }\r\n\r\n  function handleDateTo(e) {\r\n    setto_date(e.target.value)\r\n  }\r\n\r\n  function handleTimeTo(e) {\r\n    setto_time(e.target.value)\r\n  }\r\n\r\n  function handleIonoDate(e) {\r\n    setIonoDate(e.target.value)\r\n  }\r\n\r\n  function handleIonoTime(e) {\r\n    setIonoTime(e.target.value)\r\n  }\r\n\r\n  function handleAurorDate(e) {\r\n    setauroral_date(e.target.value)\r\n  }\r\n\r\n  function handleAurorTime(e) {\r\n    setauroral_time(e.target.value)\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"auth\">\r\n      <form onSubmit={onSubmit} className=\"auth__form\">\r\n        <h2 className=\"form-title form-title_type_auth\">{true ? \"Онлайн система для визуализации и анализа данных измерений продольных токов на спутниках SWARM\" : \"Рады видеть!\"}</h2>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"left\">\r\n            <div style={{ width: \"60%\" }} onClick={openProjType}>\r\n              <label className={true ? \"form-lable form-lable_type_auth\" : \"form-lable form-lable_visibility_hidden form-lable_type_auth\"}>Выберите тип проекции (Miller, Orthographic north, Orthographic south) или отображене графика (plot)<div className=\"input auth__form__input\">{proj_type ? proj_type : \"выберите тип\"}{isProjOpen ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={isProjOpen} click={onProjTypeClick} arr={proj_typeArr} />\r\n            </div>\r\n            <div className={clsx({ \"littersWrap_Disabled\": true, \"littersWrap\": isPlot() })}>\r\n              <label className=\"form-lable form-lable_type_auth\">\r\n              Выберите литер(ы) спутников SWARM-\r\n                <div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterA(!literA)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">A</label>\r\n                </div><div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterB(!literB)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">B</label>\r\n                </div><div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterC(!literC)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">C</label>\r\n                </div><div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterAC(!literAC)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">|AC|</label>\r\n                </div>\r\n              </label>\r\n            </div>\r\n            <div className={clsx({ \"littersWrap_Disabled\": true, \"littersWrap\": !isPlot() })} style={{ width: \"60%\" }} onClick={openSW_Litter}>\r\n              <label className=\"form-lable form-lable_type_auth\">Выберите интересующий спутник (SWARM-liter) или величину вектора разности Swarm A и Swarm C (|AC|)<div className=\"input auth__form__input\">{sw_liter ? sw_liter : \"выберите тип\"}{isSw_Litter ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={isSw_Litter} click={onSwLitter} arr={sw_literArr} />\r\n            </div>\r\n            <div className=\"date\">\r\n              <h3 className=\"dateTitle\">с даты</h3>\r\n              <input onChange={handleDateFrom} type=\"date\"  defaultValue=\"2017-09-07\" className=\"date_input\" required />\r\n              <input onChange={handleTimeFrom} type=\"time\" defaultValue=\"00:00:00\" className=\"date_input\" required></input>\r\n              <p>UTC</p>\r\n            </div>\r\n            {/* <label className=\"form-lable form-lable_type_auth\">from_date<input autoComplete=\"off\" type=\"text\" name=\"from_date\" className=\"auth__form__input\" required={true ? true : ''} /></label> */}\r\n            <div className=\"date\">\r\n              <h3 className=\"dateTitle\">по дату</h3>\r\n              <input onChange={handleDateTo} type=\"date\" defaultValue=\"2017-09-09\" className=\"date_input\" required></input>\r\n              <input onChange={handleTimeTo} type=\"time\" defaultValue=\"00:00:00\" className=\"date_input\" required></input>\r\n              <p>UTC</p>\r\n            </div>\r\n            <div className=\"littersWrap\" style={{ width: \"30%\" }} onClick={openSw_Channel}>\r\n              <label className=\"form-lable form-lable_type_auth\">компонента вектора (N, E, C, FAC2)<div className=\"input auth__form__input\">{sw_channel ? sw_channel : \"выберите тип\"}{issw_channel ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={issw_channel} click={onSwChannel} arr={swChannelArr} />\r\n            </div>\r\n            <lable style={{color: \"white\"}}>средний интервал, в секундах<input  onChange={(e) => setsw_delta(e.target.value)}  type=\"number\" className=\"cor_input\" style={{margin: \"0 0 0 10px\"}} defaultValue={300}></input></lable>\r\n            <div style={{margin: \"15px 0 19px 0\"}} className=\"getChekbox\">\r\n              <input onChange={() => setannotate_sw_value(!annotate_sw_value)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">Отображать числовые значения пролетов спутника SWARM</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"date\" style={{display: \"flex\", flexDirection: \"column\"}}>\r\n              <h3 className=\"dateTitle\">Если требуется отображение модели электромагнитных параметров приполярной ионосферы (http://geomag.gcras.ru/dataserv-ionomodel.html), вердите дату и выберите полусферу (north или south)</h3>\r\n              <div  style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <input onChange={handleIonoDate} type=\"date\" className=\"date_input\"></input>\r\n                <input onChange={handleIonoTime} type=\"time\" className=\"date_input\"></input>\r\n                <p>UTC</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setionomodel_n(!ionomodel_n)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">ionomodel_n</label>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setionomodel_s(!ionomodel_s)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">ionomodel_s</label>\r\n            </div>\r\n            <div className=\"date\" style={{display: \"flex\", flexDirection: \"column\"}}>\r\n              <h3  className=\"dateTitle\">Если требуется отображение модели Ovation Prime (https://doi.org/10.1029/2009JA014326), введите дату и выберите полусферу (north или south)</h3>\r\n              <div  style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <input onChange={handleAurorDate} type=\"date\" className=\"date_input\"></input>\r\n                <input onChange={handleAurorTime} type=\"time\" className=\"date_input\"></input>\r\n                <p>UTC</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setauroral_n(!auroral_n)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">auroral_n</label>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setauroral_s(!auroral_s)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">auroral_s</label>\r\n            </div>\r\n            <div className=\"date\" style={{display: \"flex\", flexDirection: \"column\"}}>\r\n              <h3 className=\"dateTitle\">Если требуется увеличение проекции до определенного прямоугольника, введише широту (lat) и долготу (lon)</h3>\r\n              <div style={{width: \"100%\", display: \"flex\"}}>\r\n               <lable style={{color: \"white\"}}>min_lon<input onChange={(e) => setprojCorMinD(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n               <lable style={{color: \"white\"}}>max_lon<input onChange={(e) => setprojCorMaxD(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n               <lable style={{color: \"white\"}}>min_lat<input onChange={(e) => setprojCorMinS(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n               <lable style={{color: \"white\"}}>max_lat<input onChange={(e) => setprojCorMaxS(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n              </div>\r\n            </div>\r\n            <div className=\"date\" style={{display: \"flex\", flexDirection: \"column\"}}>\r\n              <h3 className=\"dateTitle\">Если требуется отображение значений пролета спутника SWARM только в определенном прямоугольнике, введише широту (lat) и долготу (lon)</h3>\r\n               <div style={{width: \"100%\", display: \"flex\"}}>\r\n                 <lable style={{color: \"white\"}}>min_lon<input onChange={(e) => setswCorMinD(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n                 <lable style={{color: \"white\"}}>max_lon<input onChange={(e) => setswCorMaxD(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n                 <lable style={{color: \"white\"}}>min_lat<input onChange={(e) => setswCorMinS(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n                 <lable style={{color: \"white\"}}>max_lat<input onChange={(e) => setswCorMaxS(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n               </div>\r\n            </div>\r\n            <div className=\"littersWrap\" onClick={openObs}>\r\n               <h3 className=\"dateTitle\">Или же укажите код обсерватории INTERMAGNET и радиус в градусах, в пределах которого требуются значения пролета спутника SWARM</h3>\r\n              <label className=\"form-lable form-lable_type_auth\">obs_code<div className=\"input auth__form__input\">{obs_code ? obs_code : \"выберите тип\"}{isObs_code ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={isObs_code} click={onObs} arr={obs} />\r\n            </div>\r\n            <label style={{margin: \"15px 0 0 0\"}}className={clsx({\"form-lable form-lable_type_auth\": true, \"hide\": !obs_code})}>deg_radius<input onChange={(e)=> setdeg_radius(e.target.value)} style={{margin: \"0 0 0 15px\"}} autoComplete=\"off\" type=\"number\" name=\"deg_radius\" className=\"cor_input\" placeholder={deg_radius}/></label>\r\n            {/* <div className=\"getChekbox\">\r\n              <input onChange={() => setcut_obs_swarm_value(!cut_obs_swarm_value)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">cut_obs_swarm_value</label>\r\n            </div> */}\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setigrf_vector_diff(!igrf_vector_diff)} type=\"checkbox\" id=\"how-get\" />\r\n              <label style={{width: \"50%\"}} className=\"check\">Отображение разности векторов продольных токов между реальными данными, полученные со спутника SWARM, и модели IGRF-13</label>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setmeasure_mu(!measure_mu)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">ДМА мера аномальности значений пролета спутника SWARM</label>\r\n            </div>\r\n            <div className={clsx({\"getChekbox\": true, \"hide\": !isPlot()})}>\r\n              <input onChange={() => setnear_auroral_points(!near_auroral_points)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">Отображение на графике значений модели Ovation Prime (https://doi.org/10.1029/2009JA014326)</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button onClick={onSubmit} type=\"submit\" className={true ? \"auth__submit-btn auth__submit-btn_type_register\" : \"auth__submit-btn auth__submit-btn_type_login\"}>{true ? 'Отправить' : \"Войти\"}</button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AuthForm;","import logo from './logo.svg';\nimport './App.css';\nimport AuthForm from './components/AuthForm/AuthForm';\n\nfunction App() {\n  return (\n   <AuthForm />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}