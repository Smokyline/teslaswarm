{"version":3,"sources":["logo.svg","components/PopupChoose/PopupChoose.js","components/AuthForm/AuthForm.js","App.js","reportWebVitals.js","index.js"],"names":["PopupChoose","arr","click","isOpen","className","clsx","map","i","onClick","AuthForm","useState","proj_type","setproj_type","sw_liter","setsw_liter","from_date","setfrom_date","from_time","setfrom_time","to_date","setto_date","to_time","setto_time","ionoDate","ionoTime","auroral_date","setauroral_date","auroral_time","setauroral_time","sw_delta","setsw_delta","dataType","setDataType","hemisphere","setHemisphere","iono_bz","setiono_bz","iono_by","setiono_by","iono_kp","setiono_kp","iono_f107","setiono_f107","iono_doy","setiono_doy","iono_ut","setiono_ut","sw_channel","setsw_channel","obs_code","setobs_code","deg_radius","setdeg_radius","isProjOpen","setIsProjOpen","isSw_Litter","setIsSw_Litter","issw_channel","setIssw_channel","isObs_code","setIsObs_code","supermag_obs","setsupermag_obs","isDataType","setIsDataType","isHemisphere","setIsHemisphere","literA","setLitterA","literB","setLitterB","literC","setLitterC","literAC","setLitterAC","projCorMinD","setprojCorMinD","projCorMinS","setprojCorMinS","projCorMaxD","setprojCorMaxD","projCorMaxS","setprojCorMaxS","swCorMinD","swCorMinS","swCorMaxD","swCorMaxS","annotate_sw_value","setannotate_sw_value","ionomodel_n","setionomodel_n","ionomodel_s","setionomodel_s","auroral_n","setauroral_n","auroral_s","setauroral_s","cut_obs_swarm_value","igrf_vector_diff","setigrf_vector_diff","measure_mu","setmeasure_mu","near_auroral_points","setnear_auroral_points","mag_grid","setmag_grid","onSubmit","e","text","preventDefault","document","location","href","isPlot","isDisabled","style","display","width","onChange","type","id","color","target","value","defaultValue","required","margin","flexDirection","justifyContent","max","min","step","alignItems","autoComplete","name","placeholder","marginRight","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50ae2693.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './PopupChoose.css';\r\nimport clsx from 'clsx';\r\n\r\n\r\nfunction PopupChoose({arr, click, isOpen}) {\r\n  return(\r\n  <ul className={clsx(\"choose\", isOpen && \"choose_active\")}>\r\n    {arr.map((i) => {\r\n      return <li onClick={() => click(i)} key={i} className=\"chooseField\">{i}</li>\r\n    })}\r\n  </ul>\r\n  );\r\n}\r\n\r\nexport default PopupChoose;","import React, { useState } from \"react\";\r\nimport './AuthForm.css';\r\n/* import {useLocation} from \"react-router-dom\";\r\n */\r\nimport PopupChoose from \"../PopupChoose/PopupChoose\";\r\nimport { IconChevronDown, IconChevronUp } from '@tabler/icons';\r\nimport clsx from 'clsx';\r\n\r\n\r\nfunction AuthForm() {\r\n  const [proj_type, setproj_type] = useState(\"miller\");\r\n  const [sw_liter, setsw_liter] = useState(\"A\");\r\n\r\n  const [from_date, setfrom_date] = useState(\"2017-09-07\");\r\n  const [from_time, setfrom_time] = useState(\"00:00\");\r\n  const [to_date, setto_date] = useState(\"2017-09-09\");\r\n  const [to_time, setto_time] = useState(\"00:00\");\r\n  const [ionoDate, setIonoDate] = useState();\r\n  const [ionoTime, setIonoTime] = useState();\r\n  const [auroral_date, setauroral_date] = useState();\r\n  const [auroral_time, setauroral_time] = useState();\r\n  const [sw_delta, setsw_delta] = useState(300);\r\n  const [dataType, setDataType] = useState('FAC');\r\n  const [hemisphere, setHemisphere] = useState('Northern')\r\n  const [iono_bz, setiono_bz] = useState();\r\n  const [iono_by, setiono_by] = useState();\r\n  const [iono_kp, setiono_kp] = useState();\r\n  const [iono_f107, setiono_f107] = useState();\r\n  const [iono_doy, setiono_doy] = useState();\r\n  const [iono_ut, setiono_ut] = useState();\r\n\r\n  const [sw_channel, setsw_channel] = useState(\"n\");\r\n  const [obs_code, setobs_code] = useState();\r\n  const [deg_radius, setdeg_radius] = useState(5);\r\n\r\n  const [isProjOpen, setIsProjOpen] = useState(false);\r\n  const [isSw_Litter, setIsSw_Litter] = useState(false);\r\n  const [issw_channel, setIssw_channel] = useState(false);\r\n  const [isObs_code, setIsObs_code] = useState(false);\r\n  const [supermag_obs, setsupermag_obs] = useState(false);\r\n  const [isDataType, setIsDataType] = useState(false);\r\n  const [isHemisphere, setIsHemisphere] = useState(false);\r\n\r\n  const [literA, setLitterA] = useState(false);\r\n  const [literB, setLitterB] = useState(false);\r\n  const [literC, setLitterC] = useState(false);\r\n  const [literAC, setLitterAC] = useState(false);\r\n\r\n\r\n  const [projCorMinD, setprojCorMinD] = useState();\r\n  const [projCorMinS, setprojCorMinS] = useState();\r\n  const [projCorMaxD, setprojCorMaxD] = useState();\r\n  const [projCorMaxS, setprojCorMaxS] = useState();\r\n\r\n\r\n  const [swCorMinD, setswCorMinD] = useState();\r\n  const [swCorMinS, setswCorMinS] = useState();\r\n  const [swCorMaxD, setswCorMaxD] = useState();\r\n  const [swCorMaxS, setswCorMaxS] = useState();\r\n\r\n\r\n  const [annotate_sw_value, setannotate_sw_value] = useState(false);\r\n  const [ionomodel_n, setionomodel_n] = useState(false);\r\n  const [ionomodel_s, setionomodel_s] = useState(false);\r\n  const [auroral_n, setauroral_n] = useState(false);\r\n  const [auroral_s, setauroral_s] = useState(false);\r\n  const [cut_obs_swarm_value, setcut_obs_swarm_value] = useState(false);\r\n  const [igrf_vector_diff, setigrf_vector_diff] = useState(false);\r\n  const [measure_mu, setmeasure_mu] = useState(false);\r\n  const [near_auroral_points, setnear_auroral_points] = useState(false);\r\n  const [mag_grid, setmag_grid] = useState(false)\r\n\r\n  const proj_typeArr = [\"miller\", \"ortho_n\", \"ortho_s\", \"plot\"]\r\n  const sw_literArr = [\"A\", \"B\", \"C\", \"AC\"]\r\n  const swChannelArr = [\"n\", \"e\", \"c\", \"fac2\"]\r\n  const obs = ['AAA', 'ABG', 'ABK', 'AIA', 'API', 'ARS', 'ASC', 'ASP', 'BDV', 'BEL', 'BFO', 'BLC', 'BMT', 'BOU', 'BOX', 'BRD', 'BRW', 'BSL', 'CBB', 'CKI', 'CLF', 'CMO', 'CNB', 'CNH', 'CPL', 'CSY', 'CTA', 'CYG', 'CZT', 'DED', 'DLT', 'DMC', 'DOU', 'DRV', 'DUR', 'EBR', 'ESK', 'EYR', 'FCC', 'FRD', 'FRN', 'FUR', 'GAN', 'GCK', 'GDH', 'GNG', 'GUA', 'GUI', 'GZH', 'HAD', 'HBK', 'HER', 'HLP', 'HON', 'HRB', 'HRN', 'HUA', 'HYB', 'IQA', 'IRT', 'IZN', 'JAI', 'JCO', 'KAK', 'KDU', 'KEP', 'KHB', 'KIV', 'KMH', 'KNY', 'KOU', 'LER', 'LON', 'LRM', 'LVV', 'LYC', 'LZH', 'MAB', 'MAW', 'MBO', 'MCQ', 'MEA', 'MGD', 'MMB', 'NAQ', 'NCK', 'NEW', 'NGK', 'NUR', 'NVS', 'ORC', 'OTT', 'PAF', 'PAG', 'PEG', 'PET', 'PHU', 'PIL', 'PPT', 'PST', 'RES', 'SBA', 'SBL', 'SFS', 'SHE', 'SHU', 'SIT', 'SJG', 'SOD', 'SON', 'SPG', 'SPT', 'STJ', 'SUA', 'TAM', 'TDC', 'THL', 'THY', 'TRW', 'TSU', 'TTB', 'TUC', 'UPS', 'VAL', 'VIC', 'VNA', 'VOS', 'VSS', 'WIC', 'WMQ', 'WNG', 'YAK', 'YKC'];\r\n\r\n  function onSubmit(e, text) {\r\n    e.preventDefault();\r\n     \r\n    document.location.href = `http://aleph.gcras.ru/request/?proj_type=${proj_type}&plot_liter=${literA}:${literB}:${literC}:${literAC}&sw_liter=${sw_liter}&from_date=${from_date}T${from_time}:00&to_date=${to_date}T${to_time}:00&sw_channel=${sw_channel}&annotate_sw_value=${annotate_sw_value}&ionomodel_date=${ionoDate}T${ionoTime}:00&ionomodel_n=${ionomodel_n}&ionomodel_s=${ionomodel_s}&auroral_date=${auroral_date}T${auroral_time}:00&auroral_n=${auroral_n}&auroral_s=${auroral_s}&proj_extend_loc=${projCorMinD}:${projCorMaxD}:${projCorMinS}:${projCorMaxS}&swarm_poly_loc=${swCorMinD}:${swCorMaxD}:${swCorMinS}:${swCorMaxS}&cut_obs_swarm_value=${cut_obs_swarm_value}&obs_code=${obs_code}&deg_radius=${deg_radius}&igrf_vector_diff=${igrf_vector_diff}&measure_mu=${measure_mu}&near_auroral_points=${near_auroral_points}&sw_delta=${sw_delta}&mag_grid=${mag_grid}&supermag_obs=${supermag_obs}&dataType=${dataType}&hemisphere=${hemisphere}&iono_bz=${iono_bz}&iono_by=${iono_by}&iono_kp=${iono_kp}&iono_f107=${iono_f107}&iono_doy=${iono_doy}&iono_ut=${iono_ut}&txt_out=${text}`\r\n  }\r\n\r\n\r\n  function onProjTypeClick(i) {\r\n    setproj_type(i);\r\n  }\r\n\r\n  function onSwLitter(i) {\r\n    setsw_liter(i)\r\n  }\r\n\r\n  function onSwChannel(i) {\r\n    setsw_channel(i);\r\n  }\r\n\r\n  function onObs(i) {\r\n    setobs_code(i)\r\n  }\r\n\r\n\r\n  function openProjType() {\r\n    setIsProjOpen(!isProjOpen)\r\n  }\r\n\r\n  function openSW_Litter() {\r\n    setIsSw_Litter(!isSw_Litter)\r\n  }\r\n\r\n  function openSw_Channel() {\r\n    setIssw_channel(!issw_channel)\r\n  }\r\n\r\n  function openObs() {\r\n    setIsObs_code(!isObs_code)\r\n  }\r\n\r\n\r\n  function isPlot() {\r\n    return proj_type === \"plot\"\r\n  }\r\n\r\n  function handleDateFrom(e) {\r\n    setfrom_date(e.target.value)\r\n  }\r\n\r\n  function handleTimeFrom(e) {\r\n    setfrom_time(e.target.value)\r\n  }\r\n\r\n  function handleDateTo(e) {\r\n    setto_date(e.target.value)\r\n  }\r\n\r\n  function handleTimeTo(e) {\r\n    setto_time(e.target.value)\r\n  }\r\n\r\n  function handleIonoDate(e) {\r\n    setIonoDate(e.target.value)\r\n  }\r\n\r\n  function handleIonoTime(e) {\r\n    setIonoTime(e.target.value)\r\n  }\r\n\r\n  function handleAurorDate(e) {\r\n    setauroral_date(e.target.value)\r\n  }\r\n\r\n  function handleAurorTime(e) {\r\n    setauroral_time(e.target.value)\r\n  }\r\n\r\n  function isDisabled() {\r\n    if (auroral_n || auroral_s) {\r\n      if ((!auroral_date || !auroral_time)) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } else if (proj_type === \"plot\") {\r\n      if (!literA && !literB && !literC && !literAC) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <main className=\"auth\">\r\n      <form onSubmit={onSubmit} className=\"auth__form\">\r\n        <h2 className=\"form-title form-title_type_auth\">{true ? \"Онлайн система для визуализации и анализа данных измерений продольных токов на спутниках SWARM\" : \"Рады видеть!\"}</h2>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"left\">\r\n            <div style={{ width: \"60%\" }} onClick={openProjType}>\r\n              <label className={true ? \"form-lable form-lable_type_auth\" : \"form-lable form-lable_visibility_hidden form-lable_type_auth\"}>Выберите тип проекции (Miller, Orthographic north, Orthographic south) или отображене графика (plot)<div className=\"input auth__form__input\">{proj_type ? proj_type : \"выберите тип\"}{isProjOpen ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={isProjOpen} click={onProjTypeClick} arr={proj_typeArr} />\r\n            </div>\r\n            <div className={clsx({ \"littersWrap_Disabled\": true, \"littersWrap\": isPlot() })}>\r\n              <label className=\"form-lable form-lable_type_auth\">\r\n                Выберите литер(ы) спутников SWARM-\r\n                <div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterA(!literA)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">A</label>\r\n                </div><div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterB(!literB)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">B</label>\r\n                </div><div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterC(!literC)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">C</label>\r\n                </div><div className=\"getChekbox\">\r\n                  <input onChange={() => setLitterAC(!literAC)} type=\"checkbox\" id=\"how-get\" />\r\n                  <label className=\"check\">|AC|</label>\r\n                </div>\r\n              </label>\r\n              {(!literA && !literB && !literC && !literAC) && <div style={{ color: 'red' }}>Выберите одно из значений</div>}\r\n            </div>\r\n            <div className={clsx({ \"littersWrap_Disabled\": true, \"littersWrap\": !isPlot() })} style={{ width: \"60%\" }} onClick={openSW_Litter}>\r\n              <label className=\"form-lable form-lable_type_auth\">Выберите интересующий спутник (SWARM-liter) или величину вектора разности Swarm A и Swarm C (|AC|)<div className=\"input auth__form__input\">{sw_liter ? sw_liter : \"выберите тип\"}{isSw_Litter ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={isSw_Litter} click={onSwLitter} arr={sw_literArr} />\r\n            </div>\r\n            <div className=\"date\">\r\n              <h3 className=\"dateTitle\">с даты</h3>\r\n              <input onChange={handleDateFrom} type=\"date\" defaultValue=\"2017-09-07\" className=\"date_input\" required />\r\n              <input onChange={handleTimeFrom} type=\"time\" defaultValue=\"00:00:00\" className=\"date_input\" required></input>\r\n              <p>UTC</p>\r\n            </div>\r\n            {/* <label className=\"form-lable form-lable_type_auth\">from_date<input autoComplete=\"off\" type=\"text\" name=\"from_date\" className=\"auth__form__input\" required={true ? true : ''} /></label> */}\r\n            <div className=\"date\">\r\n              <h3 className=\"dateTitle\">по дату</h3>\r\n              <input onChange={handleDateTo} type=\"date\" defaultValue=\"2017-09-09\" className=\"date_input\" required></input>\r\n              <input onChange={handleTimeTo} type=\"time\" defaultValue=\"00:00:00\" className=\"date_input\" required></input>\r\n              <p>UTC</p>\r\n            </div>\r\n            <div className=\"littersWrap\" style={{ width: \"30%\" }} onClick={openSw_Channel}>\r\n              <label className=\"form-lable form-lable_type_auth\">компонента вектора (N, E, C, FAC2)<div className=\"input auth__form__input\">{sw_channel ? sw_channel : \"выберите тип\"}{issw_channel ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={issw_channel} click={onSwChannel} arr={swChannelArr} />\r\n            </div>\r\n            <lable style={{ color: \"white\" }}>средний интервал, в секундах<input onChange={(e) => setsw_delta(e.target.value)} type=\"number\" className=\"cor_input\" style={{ margin: \"0 0 0 10px\" }} defaultValue={300}></input></lable>\r\n            {!isPlot() && <div style={{ margin: \"15px 0 19px 0\" }} className=\"getChekbox\">\r\n              <input onChange={() => setannotate_sw_value(!annotate_sw_value)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">Отображать числовые значения пролетов спутника SWARM</label>\r\n            </div>}\r\n            {isPlot() && <div style={{ margin: \"15px 0 19px 0\" }} className=\"getChekbox\">\r\n              <input onChange={() => setsupermag_obs(!supermag_obs)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">Отображение значений наземных станций superMAG</label>\r\n            </div>}\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"date\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <h3 className=\"dateTitle\">Если требуется отображение модели электромагнитных параметров приполярной ионосферы (http://geomag.gcras.ru/dataserv-ionomodel.html), введите дату и выберите параметры</h3>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\r\n                <div style={{ width: \"45%\" }} onClick={() => setIsDataType(!isDataType)}>\r\n                  <label className={true ? \"form-lable form-lable_type_auth\" : \"form-lable form-lable_visibility_hidden form-lable_type_auth\"}>Data type<div className=\"input auth__form__input\">{dataType}{isDataType ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n                  <PopupChoose isOpen={isDataType} click={setDataType} arr={['FAC', 'Potential', 'sigH']} />\r\n                </div>\r\n                <div style={{ width: \"45%\" }} onClick={() => setIsHemisphere(!isHemisphere)}>\r\n                  <label className={true ? \"form-lable form-lable_type_auth\" : \"form-lable form-lable_visibility_hidden form-lable_type_auth\"}>Hemisphere<div className=\"input auth__form__input\">{hemisphere}{isHemisphere ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n                  <PopupChoose isOpen={isHemisphere} click={setHemisphere} arr={['Northern', 'Southern']} />\r\n                </div>\r\n              </div>\r\n              <div style={{ display: 'flex', width: \"100%\", margin: \"40px 0\" }}>\r\n                <div className='new' style={{ width: \"100%\", display: \"flex\", flexDirection: 'column' }}>\r\n                  <lable style={{ color: \"white\", margin: '10px 0' }}>Bz, nT:<input onChange={(e) => setiono_bz(e.target.value)} type=\"number\" className=\"cor_input\" max='12' min='-12' style={{ margin: '0 10px' }}></input>(-12...12)</lable>\r\n                  <lable style={{ color: \"white\", margin: '10px 0' }}>By, nT:<input onChange={(e) => setiono_by(e.target.value)} type=\"number\" className=\"cor_input\" max='12' min='-12' style={{ margin: '0 10px' }}></input>(-12...12)</lable>\r\n                  <lable style={{ color: \"white\", margin: '10px 0' }}>Kp, units:<input onChange={(e) => setiono_kp(e.target.value)} type=\"number\" className=\"cor_input\" max='8' min='1' style={{ margin: '0 10px' }}></input>(1...8)</lable>\r\n                </div>\r\n                <div className='new' style={{ width: \"100%\", display: \"flex\", flexDirection: 'column' }}>\r\n                  <lable style={{ color: \"white\", margin: '10px 0' }}>F107, units:<input onChange={(e) => setiono_f107(e.target.value)} type=\"number\" className=\"cor_input\" min='50' max='350' style={{ margin: '0 10px' }}></input>(50...350)</lable>\r\n                  <lable style={{ color: \"white\", margin: '10px 0' }}>DOY, days:<input onChange={(e) => setiono_doy(e.target.value)} type=\"number\" className=\"cor_input\" min='1' max='356' style={{ margin: '0 10px' }}></input>(1...356)</lable>\r\n                  <lable style={{ color: \"white\", margin: '10px 0' }}>UT, decimal hours:<input onChange={(e) => setiono_ut(e.target.value)} type=\"number\" className=\"cor_input\" /* min='0.0' max='23.9' */ step=\"any\" style={{ margin: '0 10px' }}></input>(0.0...23.9)</lable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setionomodel_n(!ionomodel_n)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">ionomodel_n</label>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setionomodel_s(!ionomodel_s)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">ionomodel_s</label>\r\n            </div>\r\n            <div className=\"date\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <h3 className=\"dateTitle\">Если требуется отображение модели Ovation Prime (https://doi.org/10.1029/2009JA014326), введите дату и выберите полусферу (north или south)</h3>\r\n              {(auroral_n || auroral_s) && <div><div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input onChange={handleAurorDate} type=\"date\" className=\"date_input\"></input>\r\n                <input onChange={handleAurorTime} type=\"time\" className=\"date_input\"></input>\r\n                <p>UTC</p>\r\n              </div>\r\n                {(!auroral_time || !auroral_date) && <div style={{ color: 'red' }}>Заполните обязательное поле</div>}\r\n              </div>}\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setauroral_n(!auroral_n)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">auroral_n</label>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setauroral_s(!auroral_s)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">auroral_s</label>\r\n            </div>\r\n            <div className=\"date\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <h3 className=\"dateTitle\">Если требуется увеличение проекции до определенного прямоугольника, введише широту (lat) и долготу (lon)</h3>\r\n              <div style={{ width: \"100%\", display: \"flex\" }}>\r\n                <lable style={{ color: \"white\" }}>min_lon<input onChange={(e) => setprojCorMinD(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n                <lable style={{ color: \"white\" }}>max_lon<input onChange={(e) => setprojCorMaxD(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n                <lable style={{ color: \"white\" }}>min_lat<input onChange={(e) => setprojCorMinS(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n                <lable style={{ color: \"white\" }}>max_lat<input onChange={(e) => setprojCorMaxS(e.target.value)} type=\"number\" className=\"cor_input\"></input></lable>\r\n              </div>\r\n            </div>\r\n            <div className=\"littersWrap\" onClick={openObs}>\r\n              <h3 className=\"dateTitle\">Или же укажите код обсерватории INTERMAGNET и радиус в градусах, в пределах которого требуются значения пролета спутника SWARM</h3>\r\n              <label className=\"form-lable form-lable_type_auth\">obs_code<div className=\"input auth__form__input\">{obs_code ? obs_code : \"выберите тип\"}{isObs_code ? <IconChevronDown /> : <IconChevronUp />}</div></label>\r\n              <PopupChoose isOpen={isObs_code} click={onObs} arr={obs} />\r\n            </div>\r\n            <label style={{ margin: \"15px 0 0 0\" }} className={clsx({ \"form-lable form-lable_type_auth\": true, \"hide\": !obs_code })}>deg_radius<input onChange={(e) => setdeg_radius(e.target.value)} style={{ margin: \"0 0 0 15px\" }} autoComplete=\"off\" type=\"number\" name=\"deg_radius\" className=\"cor_input\" placeholder={deg_radius} /></label>\r\n            {/* <div className=\"getChekbox\">\r\n              <input onChange={() => setcut_obs_swarm_value(!cut_obs_swarm_value)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">cut_obs_swarm_value</label>\r\n            </div> */}\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setigrf_vector_diff(!igrf_vector_diff)} type=\"checkbox\" id=\"how-get\" />\r\n              <label style={{ width: \"50%\" }} className=\"check\">Отображение разности векторов продольных токов между реальными данными, полученные со спутника SWARM, и модели IGRF-13</label>\r\n            </div>\r\n            <div className=\"getChekbox\">\r\n              <input onChange={() => setmeasure_mu(!measure_mu)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">ДМА мера аномальности значений пролета спутника SWARM</label>\r\n            </div>\r\n            {!isPlot() && <div className=\"getChekbox\">\r\n              <input onChange={() => setmag_grid(!mag_grid)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">Отображение геомагнитной сетке координат</label>\r\n            </div>}\r\n            <div className={clsx({ \"getChekbox\": true, \"hide\": !isPlot() })}>\r\n              <input onChange={() => setnear_auroral_points(!near_auroral_points)} type=\"checkbox\" id=\"how-get\" />\r\n              <label className=\"check\">Отображение на графике значений модели Ovation Prime (https://doi.org/10.1029/2009JA014326)</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex' }}>\r\n          <button style={{marginRight: '15px'}} onClick={(e) => onSubmit(e, false)} type=\"submit\" className={true ? \"auth__submit-btn auth__submit-btn_type_register\" : \"auth__submit-btn auth__submit-btn_type_login\"} disabled={isDisabled()}>{true ? 'Отправить' : \"Войти\"}</button>\r\n          <button onClick={(e) => onSubmit(e, true)} type=\"submit\" className={true ? \"auth__submit-btn auth__submit-btn_type_register\" : \"auth__submit-btn auth__submit-btn_type_login\"} disabled={isDisabled()}>{true ? 'Получить данные в текстовом виде' : \"Войти\"}</button>\r\n        </div>\r\n        {isDisabled() && <div style={{ color: 'red' }}>Необходимо заполнить обязательные поля</div>}\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AuthForm;","import logo from './logo.svg';\nimport './App.css';\nimport AuthForm from './components/AuthForm/AuthForm';\n\nfunction App() {\n  return (\n   <AuthForm />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}